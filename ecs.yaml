AWSTemplateFormatVersion: "2010-09-09"
Description: ECS Cluster, Service, and Task Definition

Parameters:
  ProjectName:
    Type: String
  VpcId:
    Type: String
  PrivateSubnet1:
    Type: String
  PrivateSubnet2:
    Type: String
  ALBSecurityGroupId:
    Type: String
  TargetGroupBlueArn:
    Type: String
  ContainerPort:
    Type: Number
    Default: 8080

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${ProjectName}-cluster"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-cluster"

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      RoleName: !Sub "${ProjectName}-ecsTaskExecutionRole"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-ecsTaskExecutionRole"

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${ProjectName}"
      RetentionInDays: 7
      Tags:
        - Key: Name
          Value: !Sub "/ecs/${ProjectName}"

  ServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECS Service Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          SourceSecurityGroupId: !Ref ALBSecurityGroupId
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-service-sg"

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${ProjectName}-task"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: !Sub "${ProjectName}-container"
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ProjectName}-repo:latest"
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Essential: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-task-def"

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${ProjectName}-service"
      LaunchType: FARGATE
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref TaskDefinition
      DeploymentController:
        Type: CODE_DEPLOY
      DesiredCount: 0
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref ServiceSecurityGroup
          Subnets:
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2
      LoadBalancers:
        - ContainerName: !Sub "${ProjectName}-container"
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref TargetGroupBlueArn
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-service"

Outputs:
  ClusterName:
    Value: !Ref ECSCluster
  ServiceName:
    Description: Name of the ECS service
    Value: !GetAtt ECSService.Name
  TaskExecutionRoleArn:
    Value: !GetAtt ECSTaskExecutionRole.Arn
  LogGroupName:
    Value: !Ref LogGroup
  ContainerName:
    Value: !Sub "${ProjectName}-container"
